{"version":3,"sources":["component/App/App.module.css","component/InstallBtn/InstallBtn.jsx","component/Header/Header.jsx","text.js","component/ReChart/ReChart.jsx","fileHandler.js","Context.js","component/Dashboard/Dashboard.jsx","component/DetailPage/DetailPage.jsx","component/TabBar/TabBar.jsx","component/App/App.jsx","serviceWorker.js","index.js","component/ReChart/Rechart.module.css","component/DetailPage/DetaiPage.module.css","component/TabBar/TabBar.module.css","component/Dashboard/Dashboard.module.css","component/Header/Header.module.css","component/InstallBtn/InstallBtn.module.css"],"names":["module","exports","InstallBtn","useState","accept","setAccept","btn","useRef","useEffect","deferredPrompt","btnAdd","current","window","addEventListener","e","prompt","userChoice","then","choiceResult","outcome","console","log","className","styles","hide","show","ref","Header","title","subtitle","wrapper","text","navigator","language","update","selectArea","global","ch","oversea","Confirmed","Recovered","Deaths","Mainland_China","Other_Locations","datasource","BarTip","active","payload","label","tip","map","data","i","key","style","color","fill","name","value","ReBarchart","barChart","width","height","layout","barCategoryGap","barGap","dataKey","stroke","strokeDasharray","type","orientation","content","ComposeToolTip","moment","format","length","ReLinechart","area","lineChart","barSize","tickFormatter","unixTime","padding","left","right","yAxisId","colors","DetailedChart","allowDataOverflow","labelFormatter","Object","keys","index","strokeWidth","isDate","fileHandler","sampleData","timeSeries","processedData","test","filter","record","split","push","forEach","timeStamp","unix","item","parseInt","Context","React","createContext","Provider","state","rawData","updateTime","lineChartData","detailedData","result","getData","a","axios","get","features","attributes","Province_State","citiIndex","Country_Region","setState","lastUpdate","Last_Update","Date","toLocaleString","getLineChartData","Mainland_China_Increase","Other_Locations_Increase","this","props","children","Component","Dashboard","useContext","finalData","setFinalData","setArea","filterData","container","checkBox","htmlFor","id","onChange","event","target","footer","href","CitySelect","valueList","setValue","location","cityIndex","DetailPage","locations","city1","setCiti1","city2","setCiti2","city3","setCiti3","displayData","newRecord","selectDiv","chart","TabBar","bmBurgerButton","position","top","bmBurgerBars","background","bmBurgerBarsHover","bmCrossButton","bmCross","bmMenuWrap","bmMenu","fontSize","bmMorphShape","bmItemList","bmItem","display","bmOverlay","itemWrapper","withRouter","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.01ddc61f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1LZH_\"};","import React, { useRef, useEffect, useState } from 'react';\r\nimport styles from './InstallBtn.module.css';\r\n\r\nconst InstallBtn = () => {\r\n  const [accept, setAccept] = useState(true);\r\n  const btn = useRef();\r\n  useEffect(() => {\r\n    let deferredPrompt;\r\n    const btnAdd = btn.current;\r\n    window.addEventListener('beforeinstallprompt', e => {\r\n      // Stash the event so it can be triggered later.\r\n      deferredPrompt = e;\r\n      // Update UI notify the user they can add to home screen\r\n      setAccept(false);\r\n    });\r\n    btnAdd.addEventListener('click', e => {\r\n      if (deferredPrompt) {\r\n        // hide our user interface that shows our A2HS button\r\n        setAccept(true);\r\n        // Show the prompt\r\n        deferredPrompt.prompt();\r\n        // Wait for the user to respond to the prompt\r\n        deferredPrompt.userChoice.then(choiceResult => {\r\n          if (choiceResult.outcome === 'accepted') {\r\n            console.log('User accepted the A2HS prompt');\r\n          } else {\r\n            console.log('User dismissed the A2HS prompt');\r\n          }\r\n          deferredPrompt = null;\r\n        });\r\n      }\r\n    });\r\n  });\r\n  return (\r\n    <div className={accept ? styles.hide : styles.show}>\r\n      <button className={styles.btn} ref={btn}>\r\n        Install\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstallBtn;\r\n","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport InstallBtn from '../InstallBtn/InstallBtn';\r\n\r\nconst Header = ({ title, subtitle }) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div>\r\n        <h1 className={styles.title}>{title}</h1>\r\n        <h2 className={styles.subtitle}>{subtitle}</h2>\r\n      </div>\r\n      <div>\r\n        <InstallBtn />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const enText = {\r\n  title: 'Coronavirus Statistics',\r\n  update: 'Last Update:',\r\n  selectArea: 'Select Area: ',\r\n  global: 'Global',\r\n  ch: 'China',\r\n  oversea: 'Overseas',\r\n  Confirmed: ' Confirmed',\r\n  Recovered: 'Recovered',\r\n  Deaths: 'Deaths',\r\n  Mainland_China: 'Mainland China',\r\n  Other_Locations: 'Other Locations',\r\n  datasource: 'Data source: '\r\n};\r\n\r\nexport const chText = {\r\n  title: '实时疫情统计',\r\n  update: '最近更新',\r\n  selectArea: '选择区域: ',\r\n  global: '全球',\r\n  ch: '中国',\r\n  oversea: '海外',\r\n  Confirmed: '确诊',\r\n  Recovered: '康复',\r\n  Deaths: '死亡',\r\n  Mainland_China: '中国大陆',\r\n  Other_Locations: '其它地区',\r\n  datasource: '数据来源: '\r\n};\r\n\r\nconst text = navigator.language === 'zh-CN' ? chText : enText;\r\n\r\nexport default text;\r\n","import React from 'react';\r\nimport {\r\n  ResponsiveContainer,\r\n  BarChart,\r\n  Bar,\r\n  ComposedChart,\r\n  LineChart,\r\n  Line,\r\n  Brush,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend\r\n} from 'recharts';\r\nimport moment from 'moment';\r\nimport styles from './Rechart.module.css';\r\nimport text from '../../text';\r\n\r\nconst BarTip = ({ active, payload, label }) => {\r\n  if (active) {\r\n    return (\r\n      <div className={styles.tip}>\r\n        <h1>{label}</h1>\r\n        {payload\r\n          ? payload.map((data, i) => (\r\n              <p key={i} style={{ color: data.fill }}>\r\n                {text[data.name]}: {data.value}\r\n              </p>\r\n            ))\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const ReBarchart = ({ data }) => {\r\n  return (\r\n    <div className={styles.barChart}>\r\n      <ResponsiveContainer width='100%' height={1500}>\r\n        <BarChart data={data} layout='vertical' barCategoryGap='6%' barGap='4%'>\r\n          <Brush dataKey='name' height={30} stroke='#8884d8' />\r\n          <CartesianGrid strokeDasharray='3 3' />\r\n          <XAxis type='number' orientation='top' />\r\n          <YAxis type='category' dataKey='name' />\r\n          <Tooltip content={<BarTip />} />\r\n          <Legend />\r\n          <Bar dataKey='Confirmed' fill='#fcbc00' />\r\n          <Bar dataKey='Deaths' fill='#760101' />\r\n          <Bar dataKey='Recovered' fill='#82ca9d' />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n      <p>Try to move the brush above to adjust range for display</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ComposeToolTip = ({ active, payload, label }) => {\r\n  if (active) {\r\n    return (\r\n      <div className={styles.tip}>\r\n        <h1>{moment(label).format('MMM Do')}</h1>\r\n        {payload && payload.length === 4 ? (\r\n          <div>\r\n            <div>\r\n              <p>\r\n                <strong>{text[payload[2].name]}:</strong> {payload[2].value} /{' '}\r\n                {payload[0].value}&uarr;\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <p>\r\n                <strong>{text[payload[3].name]}:</strong> {payload[3].value} /{' '}\r\n                {payload[1].value}&uarr;\r\n              </p>\r\n            </div>\r\n          </div>\r\n        ) : payload && payload.length === 2 ? (\r\n          <div>\r\n            <p>\r\n              <strong>{text[payload[1].name]}:</strong> {payload[1].value} /{' '}\r\n              {payload[0].value}&uarr;\r\n            </p>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const ReLinechart = ({ data, area }) => {\r\n  return (\r\n    <div className={styles.lineChart}>\r\n      <ResponsiveContainer width='98%' height={200}>\r\n        <ComposedChart data={data} barSize={5}>\r\n          <CartesianGrid strokeDasharray='3 3' />\r\n          <XAxis\r\n            dataKey='Report_Date'\r\n            tickFormatter={unixTime => moment(unixTime).format('MMM D')}\r\n            padding={{ left: 22, right: 22 }}\r\n          />\r\n          <YAxis yAxisId='left' orientation='left' />\r\n          <YAxis yAxisId='right' orientation='right' />\r\n          <Tooltip content={<ComposeToolTip />} />\r\n          <Legend />\r\n          {area >= 0 ? (\r\n            <Bar\r\n              yAxisId='right'\r\n              dataKey='Mainland_China_Increase'\r\n              fill='#F9BF45'\r\n            />\r\n          ) : null}\r\n          {area <= 0 ? (\r\n            <Bar\r\n              yAxisId='right'\r\n              dataKey='Other_Locations_Increase'\r\n              fill='#86C166'\r\n            />\r\n          ) : null}\r\n          {area >= 0 ? (\r\n            <Line\r\n              yAxisId='left'\r\n              type='monotone'\r\n              dataKey='Mainland_China'\r\n              stroke='#78552B'\r\n            />\r\n          ) : null}\r\n\r\n          {area <= 0 ? (\r\n            <Line\r\n              yAxisId='left'\r\n              type='monotone'\r\n              dataKey='Other_Locations'\r\n              stroke='#4D5139'\r\n            />\r\n          ) : null}\r\n        </ComposedChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst colors = ['#4D5139', '#F9BF45', '#78552B'];\r\n\r\nexport const DetailedChart = ({ data }) => {\r\n  return (\r\n    <div>\r\n      <ResponsiveContainer width='100%' height={550}>\r\n        <LineChart data={data}>\r\n          <CartesianGrid strokeDasharray='3 3' />\r\n          <XAxis\r\n            dataKey='timeStamp'\r\n            tickFormatter={unixTime => moment(unixTime * 1000).format('MMM D')}\r\n          />\r\n          <YAxis allowDataOverflow={false} type='number' />\r\n          <Tooltip\r\n            labelFormatter={unixTime => moment(unixTime * 1000).format('MMM D')}\r\n          />\r\n          <Legend />\r\n          {/* <Line type='monotone' dataKey='Hubei' stroke='#8884d8' /> */}\r\n          {Object.keys(data[0]).map((key, index) => {\r\n            if (key !== 'timeStamp' && key !== '') {\r\n              return (\r\n                <Line\r\n                  key={key}\r\n                  type='monotone'\r\n                  dataKey={key}\r\n                  stroke={colors[index]}\r\n                  strokeWidth={2}\r\n                />\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n","import moment from 'moment';\r\n/**\r\n *\r\n * @param {Object} data: the sourced data file\r\n * @returns {Object}\r\n */\r\nconst isDate = /\\b\\d+\\W\\d+\\W\\d{2}\\s/;\r\n\r\nconst fileHandler = data => {\r\n  const sampleData = data[0];\r\n  let timeSeries = [];\r\n  const processedData = [];\r\n\r\n  //get time stamps, each day get last record\r\n  for (const key in sampleData) {\r\n    if (isDate.test(key)) {\r\n      timeSeries = timeSeries.filter(record => {\r\n        return record.split(' ')[0] !== key.split(' ')[0];\r\n      });\r\n      timeSeries.push(key);\r\n    }\r\n  }\r\n\r\n  //put in the processed data\r\n  timeSeries.forEach(record => {\r\n    processedData.push({ timeStamp: moment(record, 'MM-DD-YY HH-mm ').unix() });\r\n  });\r\n\r\n  // put data to each timestamp\r\n  data.forEach(item => {\r\n    const index =\r\n      item['Province/State'] === ''\r\n        ? item['Country/Region']\r\n        : item['Province/State'];\r\n    for (const key in item) {\r\n      if (isDate.test(key)) {\r\n        const timeStamp = moment(key, 'MM-DD-YY HH-mm ').unix();\r\n        processedData.forEach(record => {\r\n          if (record.timeStamp === timeStamp) {\r\n            record[index] = parseInt(item[key]);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  });\r\n  //sort desc of num of people in last date\r\n  // processedData.sort((a, b) => {\r\n  //   const numA = a.dataInDate[a.dataInDate.length - 1].value;\r\n  //   const numB = b.dataInDate[b.dataInDate.length - 1].value;\r\n  //   return numB - numA;\r\n  // });\r\n  return processedData;\r\n};\r\n\r\nexport default fileHandler;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport citiIndex from './cityIndex.json';\r\nimport moment from 'moment';\r\n\r\nimport result from './result.json';\r\nimport fileHandler from './fileHandler';\r\n\r\nexport const Context = React.createContext();\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    rawData: [],\r\n    updateTime: 'not avaliable',\r\n    lineChartData: [],\r\n    detailedData: fileHandler(result),\r\n    getData: async () => {\r\n      const { data } = await axios.get(\r\n        `https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/1/query?f=json&where=1=1&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Confirmed desc,Country_Region asc,Province_State asc&resultOffset=0&resultRecordCount=250&cacheHint=true`\r\n      );\r\n\r\n      const content = data.features;\r\n      const rawData = content.map(item => {\r\n        const data = item.attributes;\r\n        data.name = data.Province_State\r\n          ? citiIndex[data.Province_State]\r\n            ? citiIndex[data.Province_State]\r\n            : data.Province_State\r\n          : data.Country_Region;\r\n        return data;\r\n      });\r\n      this.setState({ rawData: rawData });\r\n      const lastUpdate = content[0].attributes.Last_Update;\r\n      this.setState({ updateTime: new Date(lastUpdate).toLocaleString() });\r\n    },\r\n    getLineChartData: async () => {\r\n      const { data } = await axios.get(\r\n        'https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/cases_time_v3/FeatureServer/0/query?f=json&where=1%3D1&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Report_Date_String%20asc&resultOffset=0&resultRecordCount=2000&cacheHint=true'\r\n      );\r\n\r\n      const content = data.features;\r\n      const rawData = content.map((item, i) => {\r\n        const data = item.attributes;\r\n        if (i > 0) {\r\n          data.Mainland_China_Increase =\r\n            content[i].attributes.Mainland_China -\r\n            content[i - 1].attributes.Mainland_China;\r\n          data.Other_Locations_Increase =\r\n            content[i].attributes.Other_Locations -\r\n            content[i - 1].attributes.Other_Locations;\r\n        } else {\r\n          data.Mainland_China_Increase = content[i].attributes.Mainland_China;\r\n          data.Other_Locations_Increase = content[i].attributes.Other_Locations;\r\n        }\r\n\r\n        return data;\r\n      });\r\n      this.setState({ lineChartData: rawData });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.state.getData();\r\n    this.state.getLineChartData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={{ state: this.state }}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport styles from './Dashboard.module.css';\r\n\r\nimport Header from '../Header/Header';\r\nimport { ReBarchart, ReLinechart } from '../ReChart/ReChart';\r\n\r\nimport { Context } from '../../Context';\r\nimport text from '../../text.js';\r\n\r\nconst Dashboard = () => {\r\n  const { state } = useContext(Context);\r\n  const { rawData, lineChartData, updateTime } = state;\r\n\r\n  const [finalData, setFinalData] = useState(rawData);\r\n  const [area, setArea] = useState('1');\r\n\r\n  useEffect(() => {\r\n    if (area === '1') {\r\n      //china\r\n      const filterData = rawData.filter(\r\n        item =>\r\n          item.Country_Region === 'Mainland China' ||\r\n          item.Country_Region === 'Hong Kong' ||\r\n          item.Country_Region === 'Macau' ||\r\n          item.Country_Region === 'Taiwan'\r\n      );\r\n      setFinalData(filterData);\r\n    } else if (area === '-1') {\r\n      //overseas\r\n      const filterData = rawData.filter(\r\n        item =>\r\n          item.Country_Region !== 'Mainland China' &&\r\n          item.Country_Region !== 'Hong Kong' &&\r\n          item.Country_Region !== 'Macau' &&\r\n          item.Country_Region !== 'Taiwan'\r\n      );\r\n      setFinalData(filterData);\r\n    } else {\r\n      setFinalData(rawData);\r\n    }\r\n  }, [area, rawData]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Header title={text.title} subtitle={`${text.update} ${updateTime}`} />\r\n      <div className={styles.checkBox}>\r\n        <div>\r\n          <label htmlFor='area'>{text.selectArea}</label>\r\n          <select\r\n            name='area'\r\n            id='area'\r\n            value={area}\r\n            onChange={event => setArea(event.target.value)}\r\n          >\r\n            <option value='0'>{text.global}</option>\r\n            <option value='1'>{text.ch}</option>\r\n            <option value='-1'>{text.oversea}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      {/* <VirusChart barData={finalData} updateTime={updateTime} />\r\n      <VirusLine data={finalLineData} /> */}\r\n      <ReBarchart data={finalData} />\r\n      <ReLinechart data={lineChartData} area={area} />\r\n      <p className={styles.footer}>\r\n        {text.datasource}{' '}\r\n        <a href='https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6'>\r\n          Johns Hopkins CSSE\r\n        </a>\r\n        . Made by Wally, 2020\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useContext, useState } from 'react';\r\nimport styles from './DetaiPage.module.css';\r\n\r\nimport Header from '../Header/Header';\r\nimport { DetailedChart } from '../ReChart/ReChart';\r\n\r\nimport { Context } from '../../Context';\r\nimport cityIndex from '../../cityIndex';\r\nimport text from '../../text.js';\r\n\r\nconst DetailPage = () => {\r\n  const { state } = useContext(Context);\r\n  const { detailedData } = state;\r\n  const locations = Object.keys(detailedData[detailedData.length - 1]);\r\n\r\n  const [city1, setCiti1] = useState('Yunnan');\r\n  const [city2, setCiti2] = useState('');\r\n  const [city3, setCiti3] = useState('');\r\n  const displayData = detailedData.map(record => {\r\n    const newRecord = { timeStamp: record.timeStamp };\r\n    newRecord[city1] = record[city1];\r\n    newRecord[city2] = record[city2];\r\n    newRecord[city3] = record[city3];\r\n\r\n    return newRecord;\r\n  });\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <Header title='Detail Page' subtitle='Update to 13th Feb' />\r\n      <div className={styles.selectDiv}>\r\n        <label htmlFor=''>Select cities</label>\r\n        <CitySelect value={city1} setValue={setCiti1} valueList={locations} />\r\n        <CitySelect value={city2} setValue={setCiti2} valueList={locations} />\r\n        <CitySelect value={city3} setValue={setCiti3} valueList={locations} />\r\n      </div>\r\n      <div className={styles.chart}>\r\n        <DetailedChart data={displayData} />\r\n      </div>\r\n      <p className={styles.footer}>\r\n        {text.datasource}{' '}\r\n        <a href='https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6'>\r\n          Johns Hopkins CSSE\r\n        </a>\r\n        . Made by Wally, 2020\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CitySelect = ({ value, valueList, setValue }) => {\r\n  return (\r\n    <select value={value} onChange={event => setValue(event.target.value)}>\r\n      <option key='0' value=''>\r\n        Empty\r\n      </option>\r\n      {valueList.map(location => {\r\n        if (location !== 'timeStamp') {\r\n          return (\r\n            <option key={location} value={location}>\r\n              {cityIndex[location] ? cityIndex[location] : location}\r\n            </option>\r\n          );\r\n        }\r\n        return null;\r\n      })}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default DetailPage;\r\n","import React from 'react';\r\nimport { slide as Menu } from 'react-burger-menu';\r\nimport styles from './TabBar.module.css';\r\n\r\nconst TabBar = () => {\r\n  const menuStyle = {\r\n    bmBurgerButton: {\r\n      position: 'fixed',\r\n      width: '30px',\r\n      height: '24px',\r\n      left: '1rem',\r\n      top: '1.2rem'\r\n    },\r\n    bmBurgerBars: {\r\n      background: '#fff'\r\n    },\r\n    bmBurgerBarsHover: {\r\n      background: '#a90000'\r\n    },\r\n    bmCrossButton: {\r\n      height: '24px',\r\n      width: '24px'\r\n    },\r\n    bmCross: {\r\n      background: '#fff'\r\n    },\r\n    bmMenuWrap: {\r\n      position: 'fixed',\r\n      height: '100%'\r\n    },\r\n    /* General sidebar styles */\r\n    bmMenu: {\r\n      background: '#fcbc00',\r\n      fontSize: '1.15em'\r\n    },\r\n    bmMorphShape: {\r\n      fill: '#373a47'\r\n    },\r\n    bmItemList: {\r\n      color: '#b8b7ad'\r\n    },\r\n    bmItem: {\r\n      display: 'inline-block'\r\n    },\r\n    bmOverlay: {\r\n      background: 'rgba(0, 0, 0, 0.3)'\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Menu styles={menuStyle} width={280}>\r\n      <div className={styles.itemWrapper}>\r\n        <h1 className={styles.title}>Menu</h1>\r\n        <a href='/' className={styles.index}>\r\n          Home\r\n        </a>\r\n        <a href='/detail' className={styles.index}>\r\n          Detail\r\n        </a>\r\n      </div>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default TabBar;\r\n","import React from 'react';\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\nimport styles from './App.module.css';\r\nimport Dashboard from '../Dashboard/Dashboard';\r\nimport DetailPage from '../DetailPage/DetailPage';\r\nimport TabBar from '../TabBar/TabBar';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <TabBar />\r\n      <Switch>\r\n        <Route exact path='/' component={Dashboard} />\r\n        <Route exact path='/detail' component={DetailPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './component/App/App';\r\nimport { Provider } from './Context';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barChart\":\"Rechart_barChart__3ACZX\",\"lineChart\":\"Rechart_lineChart__1USXl\",\"tip\":\"Rechart_tip__16PY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"DetaiPage_wrapper__dt5Je\",\"selectDiv\":\"DetaiPage_selectDiv__1GRxk\",\"chart\":\"DetaiPage_chart__3Rkvk\",\"footer\":\"DetaiPage_footer__1jr6j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrapper\":\"TabBar_itemWrapper__3d7_e\",\"title\":\"TabBar_title__3_-w7\",\"index\":\"TabBar_index__3W0Jo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dashboard_container__32h65\",\"checkBox\":\"Dashboard_checkBox__UO_Ic\",\"footer\":\"Dashboard_footer__1SaIE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__24DDU\",\"title\":\"Header_title__20iCr\",\"subtitle\":\"Header_subtitle__1XNH_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"show\":\"InstallBtn_show__2GSre\",\"hide\":\"InstallBtn_hide__2rPRL\",\"btn\":\"InstallBtn_btn__1-dCo\"};"],"sourceRoot":""}